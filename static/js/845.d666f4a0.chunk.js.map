{"version":3,"file":"static/js/845.d666f4a0.chunk.js","mappings":"uNACA,EAAiC,kCAAjC,EAA+E,6BAA/E,EAAyH,8BAAzH,EAAqK,+B,mBCsErK,EAjEkB,WACjB,IAEMA,GAAWC,EAAAA,EAAAA,MAQXC,EAAiB,WACtB,EAGD,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAsBC,UACrCC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACJC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBE,SAfc,SAACC,GACjB,EAeEC,eAboB,SAACC,GACvB,EAaEb,eAAgBA,EAChBc,cAAc,EACdZ,UAAWC,EAAiBC,SAAA,EAC5BH,EAAAA,EAAAA,KAACK,EAAAA,EAAAA,KAAS,CAACG,WAAY,CAACM,OAAQ,GAAIb,UAAWC,EAAkBC,UAChEH,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,MAAO,EAAEb,SAAC,kFAElBH,EAAAA,EAAAA,KAACK,EAAAA,EAAAA,KAAS,CACTY,MAAM,iCACNC,KAAK,QACLC,MAAO,CAAC,CACPC,UAAU,EACVC,QAAS,+HACPlB,UACHH,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,OAEPtB,EAAAA,EAAAA,KAACK,EAAAA,EAAAA,KAAS,CACTY,MAAM,uCACNC,KAAK,WACLC,MAAO,CAAC,CACPC,UAAU,EACVC,QAAS,qIACPlB,UACHH,EAAAA,EAAAA,KAACsB,EAAAA,EAAAA,SAAc,OAEhBtB,EAAAA,EAAAA,KAACK,EAAAA,EAAAA,KAAS,CACTG,WAAY,CAACM,OAAQ,GACrBS,eAAsC,UACtCC,KA/Cc,KA+CErB,UAChBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EAClCH,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAASC,SAlD5B,EAkD+CzB,SAAC,oCAG7DH,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CAACC,KAAK,OAAOG,QAAS,WAE5BhC,EAAS,gBACV,EAAEM,SAAC,iHAMT,C","sources":["webpack://simple-draw-app/./src/Components/LoginPage/LoginPage.module.css?1a08","Components/LoginPage/LoginPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"LoginPage_loginContainer__O0Eel\",\"loginForm\":\"LoginPage_loginForm__Rp+lP\",\"loginTitle\":\"LoginPage_loginTitle__IXaN2\",\"buttonBlock\":\"LoginPage_buttonBlock__sL5YC\"};","import React from \"react\";\r\nimport {Button, Form, Input} from \"antd\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport styles from \"./LoginPage.module.css\"\r\nimport Title from \"antd/lib/typography/Title\";\r\n\r\nconst LoginPage = () => {\r\n\tconst isAuthing = false;\r\n\tconst authError = null;\r\n\tconst navigate = useNavigate(); // hook for navigation to other pages\r\n\r\n\tconst onFinish = (values: any) => {\r\n\t\t// dispatch(tryLogInAsync({login: values.login, password: values.password}));\r\n\t};\r\n\tconst onFinishFailed = (errorInfo: any) => {\r\n\t\t// dispatch(setAuthError(errorInfo.errorFields[0].errors[0]))\r\n\t};\r\n\tconst onFieldsChange = () => {\r\n\t\t// dispatch(setAuthError(null))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.loginContainer}>\r\n\t\t\t<Form\r\n\t\t\t\tlabelCol={{span: 6}}\r\n\t\t\t\twrapperCol={{span: 16}}\r\n\t\t\t\tonFinish={onFinish}\r\n\t\t\t\tonFinishFailed={onFinishFailed}\r\n\t\t\t\tonFieldsChange={onFieldsChange}\r\n\t\t\t\trequiredMark={false}\r\n\t\t\t\tclassName={styles.loginForm}>\r\n\t\t\t\t<Form.Item wrapperCol={{offset: 6}} className={styles.loginTitle}>\r\n\t\t\t\t\t<Title level={3}>Вход в систему</Title>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Логин\"\r\n\t\t\t\t\tname=\"login\"\r\n\t\t\t\t\trules={[{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"Поле логин обязательно\",\r\n\t\t\t\t\t}]}>\r\n\t\t\t\t\t<Input/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Пароль\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\trules={[{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"Поле пароль обязательно\",\r\n\t\t\t\t\t}]}>\r\n\t\t\t\t\t<Input.Password/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\twrapperCol={{offset: 6}}\r\n\t\t\t\t\tvalidateStatus={authError ? \"error\" : \"success\"}\r\n\t\t\t\t\thelp={authError}>\r\n\t\t\t\t\t<div className={styles.buttonBlock}>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={isAuthing}>\r\n\t\t\t\t\t\t\tВойти\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button type=\"text\" onClick={() => {\r\n\t\t\t\t\t\t\tonFieldsChange();\r\n\t\t\t\t\t\t\tnavigate(\"/registration\");\r\n\t\t\t\t\t\t}}>У меня нет аккаунта</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;"],"names":["navigate","useNavigate","onFieldsChange","_jsx","className","styles","children","_jsxs","Form","labelCol","span","wrapperCol","onFinish","values","onFinishFailed","errorInfo","requiredMark","offset","Title","level","label","name","rules","required","message","Input","validateStatus","help","Button","type","htmlType","loading","onClick"],"sourceRoot":""}