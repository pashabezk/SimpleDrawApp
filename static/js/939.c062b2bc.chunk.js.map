{"version":3,"file":"static/js/939.c062b2bc.chunk.js","mappings":"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","sources":["webpack://simple-draw-app/./src/Components/RegistrationPage/Registration.module.css?09ee","Components/RegistrationPage/ModalRegistrationCompleted.tsx","Components/RegistrationPage/Registration.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registrationContainer\":\"Registration_registrationContainer__fS1gn\",\"registrationForm\":\"Registration_registrationForm__rCvPA\",\"registrationTitle\":\"Registration_registrationTitle__4WS4s\",\"buttonBlock\":\"Registration_buttonBlock__52t5Z\"};","import React from \"react\";\r\nimport {Button, Modal, Typography} from \"antd\";\r\n\r\nconst {Text} = Typography;\r\n\r\n/** Props interface */\r\ninterface IModalRegistrationCompletedProps {\r\n\tisCompletedModalOpen: boolean,\r\n\tonButtonClick: any\r\n}\r\n\r\n/**\r\n * Modal with notification about success authorization\r\n * @param isCompletedModalOpen\r\n * @param onButtonClick\r\n * @component\r\n */\r\nconst ModalRegistrationCompleted = ({isCompletedModalOpen, onButtonClick}: IModalRegistrationCompletedProps) => {\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle=\"Авторизация прошла успешно\"\r\n\t\t\topen={isCompletedModalOpen}\r\n\t\t\tclosable={false}\r\n\t\t\tcentered\r\n\t\t\tfooter={[\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\tonClick={onButtonClick}\r\n\t\t\t\t\tkey=\"ok\">Перейти к авторизации\r\n\t\t\t\t</Button>\r\n\t\t\t]}>\r\n\t\t\t<div>\r\n\t\t\t\t<Text>Нажмите на кнопку ниже, чтобы войти в систему</Text><br/>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ModalRegistrationCompleted;","import React from \"react\";\r\nimport {Button, Form, Input} from \"antd\";\r\nimport styles from \"./Registration.module.css\"\r\nimport ModalRegistrationCompleted from \"./ModalRegistrationCompleted\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n/**\r\n * Registration page component\r\n * @component\r\n */\r\nconst RegistrationPage = () => {\r\n\tconst isLoading = false;\r\n\tconst error = null;\r\n\tconst isCompletedModalOpen = false;\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst onFinish = async (values: any) => {\r\n\t\t// if (values.password === values.password2)\r\n\t\t// \tdispatch(tryRegisterAsync({login: values.login, password: values.password}));\r\n\t\t// else\r\n\t\t// \tdispatch(setRegistrationErrorMsg(\"Пароли не совпадают\"));\r\n\t};\r\n\tconst onFinishFailed = (errorInfo: any) => {\r\n\t\t// dispatch(setRegistrationErrorMsg(errorInfo.errorFields[0].errors[0]));\r\n\t};\r\n\tconst onFieldsChange = () => {\r\n\t\t// dispatch(setRegistrationErrorMsg(null));\r\n\t};\r\n\tconst onCompletedModalButtonClick = () => { // обработчик нажатий на кнопку в модульном окне уведомления об успешном завершении авторизации\r\n\t\t// dispatch(setIsRegistrationCompletedModalOpen(false)); // закрытие модульного окна\r\n\t\tnavigate(\"/login\"); // переход на страницу авторизации\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.registrationContainer}>\r\n\t\t\t<Form\r\n\t\t\t\tlabelCol={{span: 6}}\r\n\t\t\t\twrapperCol={{span: 16}}\r\n\t\t\t\tonFinish={onFinish}\r\n\t\t\t\tonFinishFailed={onFinishFailed}\r\n\t\t\t\tonFieldsChange={onFieldsChange}\r\n\t\t\t\trequiredMark={false}\r\n\t\t\t\tclassName={styles.registrationForm}>\r\n\t\t\t\t<Form.Item wrapperCol={{offset: 6}} className={styles.registrationTitle}>\r\n\t\t\t\t\t<Title level={3}>Регистрация</Title>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Логин\"\r\n\t\t\t\t\tname=\"login\"\r\n\t\t\t\t\trules={[{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"Поле логин обязательно\",\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tmin: 5,\r\n\t\t\t\t\t\tmessage: \"Минимальная длина 5 символов\"\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tpattern: /^[A-Za-z0-9]*$/,\r\n\t\t\t\t\t\tmessage: \"Только латинские буквы и цифры\"\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tpattern: /^\\D/,\r\n\t\t\t\t\t\tmessage: \"Первым символом должна быть буква\"\r\n\t\t\t\t\t}]}>\r\n\t\t\t\t\t<Input/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Пароль\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\trules={[{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"Поле пароль обязательно\",\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tpattern: /^[A-Za-z0-9]*$/,\r\n\t\t\t\t\t\tmessage: \"Только латинские буквы и цифры\"\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tmin: 8,\r\n\t\t\t\t\t\tmessage: \"Минимальная длина пароля 8 символов\"\r\n\t\t\t\t\t}]}>\r\n\t\t\t\t\t<Input.Password/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Ещё раз\"\r\n\t\t\t\t\tname=\"password2\"\r\n\t\t\t\t\trules={[{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"Повторите пароль\",\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tpattern: /^[A-Za-z0-9]*$/,\r\n\t\t\t\t\t\tmessage: \"Только латинские буквы и цифры\"\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\tmin: 8,\r\n\t\t\t\t\t\tmessage: \"Минимальная длина пароля 8 символов\"\r\n\t\t\t\t\t}]}>\r\n\t\t\t\t\t<Input.Password/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\twrapperCol={{offset: 6}}\r\n\t\t\t\t\tvalidateStatus={error ? \"error\" : \"success\"}\r\n\t\t\t\t\thelp={error}>\r\n\t\t\t\t\t<div className={styles.buttonBlock}>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n\t\t\t\t\t\t\tРегистрация\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button type=\"text\" onClick={() => {\r\n\t\t\t\t\t\t\tonFieldsChange();\r\n\t\t\t\t\t\t\tnavigate(\"/login\");\r\n\t\t\t\t\t\t}}>Уже есть аккаунт</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t\t<ModalRegistrationCompleted isCompletedModalOpen={isCompletedModalOpen} onButtonClick={onCompletedModalButtonClick}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RegistrationPage;\r\n"],"names":["Text","Typography","_ref","isCompletedModalOpen","onButtonClick","_jsx","Modal","title","open","closable","centered","footer","Button","type","onClick","children","_jsxs","navigate","useNavigate","onFinish","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","stop","_x","apply","arguments","onFieldsChange","className","styles","Form","labelCol","span","wrapperCol","onFinishFailed","errorInfo","requiredMark","offset","Title","level","label","name","rules","required","message","min","pattern","Input","validateStatus","help","htmlType","loading","ModalRegistrationCompleted"],"sourceRoot":""}